/* tslint:disable */
// @ts-nocheck

// https://ichi.pro/pt/como-proteger-variaveis-de-ambiente-angulares-para-uso-em-acoes-do-github-63498768340368
// https://dev.to/daviddalbusco/github-actions-hide-and-set-angular-environment-variables-1o21
const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

require('dotenv').config();
const environment = argv.environment;


function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== '') {
      console.log(`wrote variables to ${targetPath}`);
    }
  });
}


// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}

//creates the `environment.prod.ts` and `environment.ts` file if it does not exist
writeFileUsingFS('./src/environments/environment.prod.ts', '');
writeFileUsingFS('./src/environments/environment.ts', '');


// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = environment === 'prod';

// choose the correct targetPath based on the environment chosen
const targetPath = isProduction
  ? './src/environments/environment.prod.ts'
  : './src/environments/environment.ts';

const apiUrl = isProduction === false ? process.env.apiUrl_dev : process.env.apiUrl_prod;
const productImagesServerUrl = isProduction === false ? process.env.productImagesServerUrl_dev : process.env.productImagesServerUrl_prod;

//actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContent = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export const environment = {
    production: ${isProduction},
    apiUrl: '${apiUrl}',
    brasilApiUrl: '${process.env.brasilApiUrl}',
    productImagesServerUrl: '${productImagesServerUrl}',
    pedidosTimeout: ${process.env.pedidosTimeout},
    firebaseConfig: {
      apiKey: '${process.env.apiKey}',
      authDomain: '${process.env.authDomain}',
      projectId: '${process.env.projectId}',
      storageBucket: '${process.env.storageBucket}',
      messagingSenderId: '${process.env.messagingSenderId}',
      appId: '${process.env.appId}',
      measurementId: '${process.env.measurementId}'
    },
    folder_app: '${process.env.folder_app}',
    name_app: '${process.env.name_app}',
    firebaseActive: ${process.env.firebaseActive},
  };
`;

writeFileUsingFS(targetPath, environmentFileContent); // appending data into the target file

/* tslint:enable */
